
==================== FINAL INTERFACE ====================
2019-01-23 23:14:08.930826 UTC

interface main:Main 8063
  interface hash: dd8e327ee20f74a0439bc96f63ebf767
  ABI hash: a6585fa173e408b891cb9858c7a43c3d
  export-list hash: aa326c1186cea7c3982bc3944003faaf
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 986aa1d34ef75e211da5f7dc41bb6e33
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies: Algorithm
package dependencies: MissingH-1.4.1.0 base-4.12.0.0*
                      ghc-prim-0.5.3 integer-gmp-1.0.2.0 mtl-2.2.2 transformers-0.5.5.0
                      wordsPuzzle-0.1.0.0
orphans: transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
import  -/  base-4.12.0.0:Data.OldList c2cab40fed7d27b5e717779f9a3c09ea
import  -/  base-4.12.0.0:GHC.IO.Handle d868141c874ccdd1512041d4944dad09
import  -/  base-4.12.0.0:GHC.IO.Handle.FD dd20663292d73aaa9673ad694463899f
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  base-4.12.0.0:System.IO 7d8c7a747c93b42b043d691b66e1809e
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  Algorithm 3295a8c607b156fcb241f37ee14d9182
  exports: ce67e2d6777b8c398f04a533eb343541
  findSecretWord e846a5f92ee4a886133603e9ea749149
import  -/  wordsPuzzle-0.1.0.0:Lib 756adec74dd8cade74cd29a72ea4c934
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
95ff0f2ded434527e99fa1331907677c
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
47457a1bd804eda3fa87bc7fca82e3a1
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.IO.Handle.Text.hPutStr'
                         GHC.IO.Handle.FD.stdout
                         Main.main10
                         GHC.Types.False)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Internals.wantWritableHandle1
                        @ ()
                        GHC.IO.Handle.hFlush2
                        GHC.IO.Handle.FD.stdout
                        GHC.IO.Handle.Internals.flushWriteBuffer1
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.FD.openFile1
                        ipv5
                        GHC.IO.IOMode.ReadMode
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv7
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case (GHC.IO.Handle.Text.hPutStr'
                         GHC.IO.Handle.FD.stdout
                         Main.main8
                         GHC.Types.False)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 case GHC.IO.Handle.Internals.wantWritableHandle1
                        @ ()
                        GHC.IO.Handle.hFlush2
                        GHC.IO.Handle.FD.stdout
                        GHC.IO.Handle.Internals.flushWriteBuffer1
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                 case GHC.IO.Handle.FD.openFile1
                        ipv15
                        GHC.IO.IOMode.ReadMode
                        ipv14 of ds9 { (#,#) ipv16 ipv17 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv17
                        ipv16 of ds10 { (#,#) ipv18 ipv19 ->
                 case (GHC.IO.Handle.Text.hPutStr'
                         GHC.IO.Handle.FD.stdout
                         Main.main6
                         GHC.Types.True)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv18 of ds11 { (#,#) ipv20 ipv21 ->
                 case (GHC.IO.Handle.Text.hPutStr'
                         GHC.IO.Handle.FD.stdout
                         Main.main4
                         GHC.Types.False)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv20 of ds12 { (#,#) ipv22 ipv23 ->
                 case (GHC.IO.Handle.Text.hPutStr'
                         GHC.IO.Handle.FD.stdout
                         (Algorithm.findSecretWord
                            (Data.OldList.lines ipv9)
                            (Data.OldList.lines ipv19))
                         GHC.Types.True)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv22 of ds13 { (#,#) ipv24 ipv25 ->
                 (GHC.IO.Handle.Text.hPutStr'
                    GHC.IO.Handle.FD.stdout
                    Main.main2
                    GHC.Types.True)
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   ipv24 } } } } } } } } } } } } }) -}
55a865a5e35761a8def292a914b83621
  main10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main11) -}
58367d4b20a1736c2088ccd67f22eadd
  main11 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("What is the board definition filename? "#) -}
4c2352ee83b2475bae7206d49e45786a
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
21ee1e9ce3c251c7ad2ca4e7f5b78afc
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main3) -}
44ddb9097779558b7596e4d0209f99ed
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Done"#) -}
578015d1e6ea7794f09856585ffa76ce
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main5) -}
6355bd99035edd7aa37ef5f57bbef036
  main5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("The secret word is "#) -}
ca2fc2cdeb7ec53a4a384e9a156cf49a
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main7) -}
814fcaab724f9d7a1e835a0809392903
  main7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Finding secret word"#) -}
6ee3f555dcf4e9fb82b6ead117590846
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main9) -}
9bae014afbbe0c2133d05770353eeddc
  main9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("What is the filename of words? "#) -}
trusted: safe
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

